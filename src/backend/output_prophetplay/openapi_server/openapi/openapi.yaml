openapi: 3.0.1
info:
  description: "REST API für Login, Registrierung und Spielinteraktion"
  title: ProphetPlay API
  version: 1.0.0

servers:
  - description: Lokale Entwicklungsumgebung
    url: http://localhost:8080

paths:
  /api/benutzer/register:
    post:
      summary: Registrierung eines neuen Benutzers
      operationId: openapi_server.controllers.default_controller.api_benutzer_register_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "200": { description: Registrierung erfolgreich }
        "409": { description: Benutzername existiert bereits }
        "500": { description: Serverfehler }

  /api/benutzer/login:
    post:
      summary: Login eines Benutzers
      operationId: openapi_server.controllers.default_controller.api_benutzer_login_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Login erfolgreich
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "401": { description: Ungültige Anmeldedaten }
        "500": { description: Serverfehler }

  /api/benutzer/liste:
    get:
      summary: Liste aller Benutzer (nur Admin)
      operationId: openapi_server.controllers.default_controller.api_benutzer_liste_get
      parameters:
        - name: requester
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Benutzerliste
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "403": { description: Nicht autorisiert }
        "500": { description: Serverfehler }

  /api/benutzer/loeschen:
    delete:
      summary: Benutzer löschen (nur Admin)
      operationId: openapi_server.controllers.default_controller.api_benutzer_loeschen_delete
      parameters:
        - name: requester
          in: query
          required: true
          schema:
            type: string
        - name: target
          in: query
          required: true
          schema:
            type: string
      responses:
        "200": { description: Benutzer gelöscht }
        "403": { description: Nicht autorisiert }
        "500": { description: Serverfehler }

  /api/news:
    get:
      summary: Alle News (öffentlich)
      operationId: openapi_server.controllers.default_controller.api_news_get
      responses:
        "200":
          description: Liste aller News
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsItem'

    post:
      summary: Neue News anlegen (Admin)
      operationId: openapi_server.controllers.default_controller.api_news_post
      parameters:
        - name: requester
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsItemCreate'
      responses:
        "201": { description: News angelegt }
        "403": { description: Nicht autorisiert }
        "500": { description: Serverfehler }

    delete:
      summary: News löschen (Admin, nur eigene)
      operationId: openapi_server.controllers.default_controller.api_news_delete
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
        - name: requester
          in: query
          required: true
          schema:
            type: string
      responses:
        "200": { description: News gelöscht }
        "403": { description: Nicht autorisiert }
        "404": { description: Nicht gefunden }
        "500": { description: Serverfehler }

components:
  schemas:
    RegisterRequest:
      type: object
      required: [benutzername, passwort, role_id]
      properties:
        benutzername:
          type: string
        passwort:
          type: string
        role_id:
          type: integer

    LoginRequest:
      type: object
      required: [benutzername, passwort]
      properties:
        benutzername:
          type: string
        passwort:
          type: string

    LoginResponse:
      type: object
      properties:
        benutzername:
          type: string
        rolle:
          type: string

    NewsItem:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        url:
          type: string
        published_at:
          type: string
          format: date-time
        created_by:
          type: string

    NewsItemCreate:
      type: object
      required: [title]
      properties:
        title:
          type: string
        description:
          type: string
        url:
          type: string
